log {
  hello-world = [
    "&5================================================"
    "{0}&5 (version {1}&5)"
    "&5================================================"
  ]
  register-data {
    before = "Registering custom data ..."
  }
  register-attributes {
    before = "Registering attributes ..."
    after = "Successfully registered attributes: {0}"
    warn = "Duplicate deserialization key: {0} (only the first registered will take effect)"
  }
  register-slots {
    before = "Registering template slots ..."
    after = "Successfully registered template slots: {0}"
  }
  register-service {
    before = "Injecting attribute service ..."
  }
  config {
    start-loading = "Start loading {0} (to template {1}) ..."
    hot-reloading = "Hot reloading {0} (to template {1}) ..."
    error-parsing = "An error was found when parsing file: {0}"
  }
  mappings {
    refreshed = "Refreshed templates for {0} ({1})"
    attribute-description = "{0} (loaded by template: {1})"
    unreachable-without-user = "{0} is not ready for templates"
    unreachable-with-user = "{0} for {1} is not ready for templates"
    error-builder = "Expected a template slot but got template: {0}"
    error-multiplex = "Expected template: {0} but got template: {1}"
    error-compatibility = "Attribute {0} is not compatible with slot {1} (it will be ignored)"
  }
}
attribute {
  aaa-custom-info {
    failure = "Cannot apply custom info to {0} on player {1}"
  }
  aaa-custom-name {
    failure = "Cannot apply custom name to {0} on player {1}"
  }
  aaa-equipment {
    failure = "Invalid string(s) for equipments: {0}"
  }
  aaa-suit {
    failure = "Invalid string(s) for suits: {0}"
  }
  aaa-template {
    recursive = "Found recursive part of template: {0} (in {1}) and the recursive part will be dropped"
    failure = "Invalid template name: {0}"
  }
}
commands {
  init {
    already-exist = "&cThe item has already been initialized."
    nonexist = "&ePlease make sure that the command is executed by a player in whose hand there is an item."
    succeed = "&aSuccessfully initialized the item, in which lore texts will be taken over control."
  }
  drop {
    nonexist = "&ePlease make sure that the command is executed by a player in whose hand an item is initialized."
    succeed = "&aSuccessfully dropped all the data from the item and set the item as &funinitialized&a."
    warning-ok = "&c&nI UNDERSTAND THE CONSEQUENCES AND I AM SURE TO CONTINUE"
    warning = [
      "&eATTENTION! The operation is going to clear all the data and it cannot be recovered."
      "&eAre you sure to continue? {0}"
    ]
  }
  show {
    present = "&bFound &a{0}&b template(s):"
    absent = "&bFound &a0&b template(s)."
  }
  apply {
    present = "&bAppended &a{0}&b template(s):"
    absent = "&bAppended &a0&b template(s)."
  }
  unapply {
    present = "&bRemoved &a{0}&b template(s):"
    absent = "&bRemoved &a0&b template(s)."
  }
}
